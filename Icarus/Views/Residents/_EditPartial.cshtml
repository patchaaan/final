@model Icarus.Models.tblResident

<script>
    $(document).ready(function () {
        var firstname = $(".firstname").val();
        var lastname = $(".lastname").val();
        var relationship = $(".relationship").val();
        var codep = $(".codep").val();
        var birthdate = $(".birthdate").val();
        var bday = new Date('@Model.Birthdate'); // Or the date you'd like converted.
        var datebday = new Date(bday.getTime() - (bday.getTimezoneOffset() * 60000)).toISOString().substring(0, 10);
        $(".birthdate").val(datebday);
        if ((firstname != null || firstname != '') && (lastname != null || lastname != '') && (relationship != null || relationship != '') && (codep != null || codep != '') && (birthdate != null || birthdate != '')) {
            $('.createButton').removeAttr("type").attr("type", "submit");
        } else {
            $('.createButton').removeAttr("type").attr("type", "button");
        }
        $(".cancelButton").on("click", function () {
            $(".modal-dialog").find('form').trigger('reset');
        });
        $(".close").on("click", function () {
            $(".modal-dialog").find('form').trigger('reset');
        });



        $(".lastname").on("keyup", function () {
            lastname = $(this).val();
            $.fn.Create();
        });

        $(".firstname").on("keyup", function () {
            firstname = $(this).val();
            $.fn.Create();
        });

        $(".birthdate").on("keyup", function () {
            birthdate = $(this).val();
            $.fn.Create();
        });

        $(".codep").on("keyup", function () {
            codep = $(this).val();
            $.fn.Create();
        });

        $(".relationship").on("keyup", function () {
            relationship = $(this).val();
            $.fn.Create();
        });

        $.fn.Create = function () {
            if ((firstname != null || firstname != '') && (lastname != null || lastname != '') && (relationship != null || relationship != '') && (codep != null || codep != '') && (birthdate != null || birthdate != '')) {
                $('.createButton').removeAttr("type").attr("type", "submit");
            } else {
                $('.createButton').removeAttr("type").attr("type", "button");
            }
        }
    });
</script>

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title" id="myModalLabel">Edit Resident</h3>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        </div>
        @using (Html.BeginForm("Edit", "Residents", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.IDResident)
            <div class="modal-body">
                <div class="form">
                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            <label><b>Last Name</b>&nbsp;&nbsp;<span id="lastnameMessage" style="color:red;">*</span></label>
                            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @id = "lastname", @type = "text", @class = "form-control lastname", Required = true, autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            <label><b>First Name&nbsp;&nbsp;<span id="firstnameMessage" style="color:red;">*</span></b></label>
                            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control firstname", Required = true, autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label><b>Middle Name</b></label>
                            @Html.EditorFor(model => model.Middlename, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Middlename, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label><b>Nickname</b></label>
                            @Html.EditorFor(model => model.Nickname, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Nickname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label><b>Birthdate&nbsp;&nbsp;<span id="birthdateMessage" style="color:red;">*</span></b></label>
                            @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @id="birthdate", @type = "date", @class = "form-control birthdate", Required = true } })
                            @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label><b>Age</b></label>
                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @type = "number", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label><b>Sex</b></label>
                            @Html.DropDownListFor(model => model.Sex,
                                   (
                                       new[] { new SelectListItem { Text = "Female", Value = "Female" },
                                       new SelectListItem { Text = "Male", Value = "Male" }
                                   }),
                                   new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label><b>Codep&nbsp;&nbsp;<span id="codepMessaage" style="color:red;">*</span></b></label>
                            @Html.EditorFor(model => model.Codep, new { htmlAttributes = new { @class = "form-control codep", Required = true, autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Codep, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label><b>Relationship&nbsp;&nbsp;<span id="relationshipMessage" style="color:red;">*</span></b></label>
                            @Html.EditorFor(model => model.Relationship, new { htmlAttributes = new { @class = "form-control relationship", Required = true, autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Relationship, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label><b>Contact Number&nbsp;&nbsp;<span></span></b></label>
                            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label><b>Email&nbsp;&nbsp;<span></span></b></label>
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @type = "email", @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger btn-sm cancelButton" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-sm createButton" style="background-color:#444D8E;color:white;">Save</button>
            </div>
        }
    </div>
</div>