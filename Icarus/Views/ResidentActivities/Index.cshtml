@model Icarus.Models.tblResidentActivity

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .tableheadleft {
        border-top-left-radius: 15px !important;
    }

    .tableheadright {
        border-top-right-radius: 15px !important;
    }

    .resident-holder::-webkit-scrollbar {
        width: 12px; /* width of the entire scrollbar */
        background-color: transparent;
        height: 10px;
    }

    .resident-holder::-webkit-scrollbar-track {
        background: transparent !important; /* color of the tracking area */
    }

    .resident-holder::-webkit-scrollbar-thumb {
        background: transparent; /* color of the scroll thumb */
        border-radius: 20px; /* roundness of the scroll thumb */
        border: 3px solid transparent !important; /* creates padding around scroll thumb */
    }

    .resident-holder {
        height: 75vh;
        overflow-y: auto;
    }

    #residenthead {
        position: sticky;
        top: 0; /* Don't forget this, required for the stickiness */
        background-color: #6C7AE0;
    }
</style>
<script>
    function Delete(id) {
        $("#id").val(id);
        $('#myModal').modal().show();
    }
    function Add() {
        $("#createModal").modal().show();
    }

    function Edit(id) {
        var url = $("#editModal").data("url");
        $.get(url + "/" + id, function (data) {
            $("#editModal").html(data);
            $("#editModal").modal().show();
        });
    }

    $(document).ready(function () {
        document.title = 'Resident Activity';
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#myTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>

<div class="pl-5 pr-5">
    <div class="d-flex mb-2 mt-2 justify-content-between">
        <input class="form-control col-sm-4" id="myInput" type="search" placeholder="Search" aria-label="Search">
        @if (Session["isADG"].ToString() == "Y" || Session["isPG"].ToString() == "Y")
        {
            <div>
                <a class="btn" style="background-color:#4E58A2;color:white;" onclick="Add()">
                    <i class="fa fa-plus-circle" aria-hidden="true"></i>
                    <span>&nbsp;Add Resident Activity</span>
                </a>
            </div>
        }

    </div>
    <hr>
    <div class="resident-holder">
        <table class="table table-striped table-hover table-borderless">
            <thead style="background-color: #6C7AE0; color: white;">
                <tr>
                    <th id="residenthead" class="tableheadleft" scope="col">Log Date</th>
                    <th id="residenthead" scope="col">Resident</th>
                    <th id="residenthead" scope="col">Position</th>
                    <th id="residenthead" scope="col">@Html.DisplayNameFor(model => model.Activity)</th>

                    @if (Session["isPG"].ToString() == "Y" || Session["isADG"].ToString() == "Y")
                    {
                        <th id="residenthead" scope="col">Posted by</th>
                        <th id="residenthead" class="tableheadright text-center" scope="col">Action</th>
                    }
                    else
                    {
                        <th id="residenthead" class="tableheadright" scope="col">Posted by</th>
                    }
                </tr>
            </thead>
            <tbody id="myTable">
                @foreach (var item in ViewBag.ActivitiesList)
                {
                    <tr>
                        <td>
                            @item.LogDate
                        </td>
                        <td>
                            @foreach (var res in ViewBag.residents)
                            {
                                if (item.IDAdmission == res.IDAdmission)
                                {
                                    <p>@res.Resident</p>
                                }
                            }
                        </td>
                        <td>
                            @item.Position
                        </td>
                        <td>
                            @item.Activity
                        </td>
                        <td>
                            @item.PostedBy
                        </td>
                        @if (Session["isPG"].ToString() == "Y" || Session["isADG"].ToString() == "Y")
                        {
                            <td>
                                <center>
                                    <button class="btn btn-sm btn-warning" onclick="Edit(@item.IDResidentActivityLog)">Edit</button>
                                    @if (Session["isADG"].ToString() == "Y")
                                    {
                                        <button class="btn btn-sm btn-danger" type="button" onclick="Delete(@item.IDResidentActivityLog)">Delete</button>
                                    }
                                </center>

                            </td>
                        }

                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-url="@Url.Action("EditPartial","ResidentActivities")">
    </div>
    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-md" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Create Resident Activity</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                @using (Html.BeginForm("Create", "ResidentActivities", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="form">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-row">
                                <div class="form-group col-sm-6">
                                    <label><b>Log Date</b></label>
                                    @Html.TextBoxFor(model => model.LogDate, new { @class = "form-control", @type = "date", Required = true })
                                    @Html.ValidationMessageFor(model => model.LogDate, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-sm-6">
                                    <label><b>Admission</b></label>
                                    @Html.DropDownListFor(model => model.IDAdmission, (SelectList)ViewBag.residentList, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IDAdmission, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-sm-6">
                                    <label><b>Position</b></label>
                                    @Html.DropDownListFor(model => model.Position, (SelectList)ViewBag.ranks, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-sm-6">
                                    <label><b>Posted by:</b></label>
                                    @Html.EditorFor(model => model.PostedBy, new { htmlAttributes = new { @class = "form-control generatedBy", Value = ViewBag.generatedBy, disabled = true } })
                                    @Html.ValidationMessageFor(model => model.PostedBy, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-sm-6">
                                    <label><b>Activity</b></label>
                                    @Html.TextAreaFor(model => model.Activity, new { @class = "form-control", @rows = 5, Required = true })
                                    @Html.ValidationMessageFor(model => model.Activity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger btn-sm cancelButton" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-sm" style="background-color:#444D8E;color:white;">Create</button>
                    </div>
                }
            </div>
        </div>
        @*@Html.Partial("_CreatePartial", ViewData["ResidentAct"])*@
    </div>
    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Confirmation</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this Resident Activity?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    @using (Html.BeginForm("Delete", "ResidentActivities", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <input type="number" class="id" id="id" style="display:none;" name="id" value="" />
                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
