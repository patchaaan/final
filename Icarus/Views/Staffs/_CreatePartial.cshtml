@model Icarus.Models.tblStaff

<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script>
    function OnSuccess(response) {
        if (response == "Password") {
            $("#passwordmessage").text("Password should be atleast 8 characters!");
            $("#usernamemessage").text("");
        } else {
            if (response == true) {
                $("#usernamemessage").text(null);
                Close();
            } else {
                $("#usernamemessage").text("Username is already taken!");
            }
        }

        
    }
    function OnFailure(response) {
        alert("Error occured.");
    }

    $(document).ready(function () {


        $(".password").on("keyup", function () {
            var password = $(this).val();
            if (password.length < 8) {
                $("#passwordmessage").text("Password should be atleast 8 characters!");
            }
            if (password.length == 0 || password.length >= 8) {
                $("#passwordmessage").text(null);
            }
        });

        $(".cancelButton").on("click", function () {
            $(".modal-dialog").find('form').trigger('reset');
        });
        $(".close").on("click", function () {
            $(".modal-dialog").find('form').trigger('reset');
        });
    });
</script>

<div class="modal-dialog modal-md" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title" id="myModalLabel">Create Staff</h3>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        </div>
        @using (Ajax.BeginForm("Create", "Staffs", new AjaxOptions
        {
            OnSuccess = "OnSuccess",
            OnFailure = "OnFailure",
            HttpMethod = "POST"
        }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-body">
                <div class="form">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            <label><b>Last Name: <span style="color:red;">*</span></b></label>
                            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { placeholder = "Enter Lastname", @class = "form-control", autocomplete = "off", Required = true } })
                            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            <label><b>First Name: <span style="color:red;">*</span></b></label>
                            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { placeholder = "Enter Firstname", @class = "form-control", autocomplete = "off", Required = true } })
                            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            <label><b>Date Hired: <span style="color:red;">*</span></b></label>
                            @Html.TextBoxFor(model => model.DateHired, new { @type = "date", @class = "form-control datehired", Required = true })
                            @Html.ValidationMessageFor(model => model.DateHired, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            <label><b>Date Terminated:</b></label>
                            @Html.TextBoxFor(model => model.DateTerminated, new { @type = "date", @class = "form-control dateterminated" })
                            @Html.ValidationMessageFor(model => model.DateTerminated, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            <label><b>Contact Number:</b></label>
                            @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { placeholder = "Enter Contact Number", @type = "number", @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            <label><b>Status</b></label>
                            @Html.DropDownListFor(model => model.Status,
                                        (
                                            new[] { new SelectListItem { Text = "Active", Value = "Active" },
                                            new SelectListItem { Text = "Inactive", Value = "Inactive" }
                                        }),
                                        new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            <label><b>Username: <span style="color:red;">*</span></b></label>
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", placeholder = "Enter Username", Required = true } })
                            <span style="color:red;font-size:12px;" id="usernamemessage"></span>
                        </div>
                        <div class="form-group col-sm-6">
                            <label><b>Password: <span style="color:red;">*</span></b></label>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @type = "password", autocomplete = "new-password", placeholder = "Enter Password", @class = "form-control password", Required = true } })
                            <span style="color:red;font-size:12px;" id="passwordmessage"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            <label><b>Email:</b></label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "Enter Email", @type = "email", autocomplete = "off", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            <label><b>Admin Director Group:</b></label>
                            @Html.DropDownListFor(model => model.isADG,
                                        (
                                            new[] { new SelectListItem { Text = "N", Value = "N" },
                                            new SelectListItem { Text = "Y", Value = "Y" }
                                        }),
                                        new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.isADG, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">

                        <div class="form-group col-sm-6">
                            <label><b>Admin Assistant Group:</b></label>
                            @Html.DropDownListFor(model => model.isAAG,
                                        (
                                            new[] { new SelectListItem { Text = "N", Value = "N" },
                                            new SelectListItem { Text = "Y", Value = "Y" }
                                        }),
                                        new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.isAAG, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            <label><b>Executive Director Group:</b></label>
                            @Html.DropDownListFor(model => model.isEDG,
                                        (
                                            new[] { new SelectListItem { Text = "N", Value = "N" },
                                            new SelectListItem { Text = "Y", Value = "Y" }
                                        }),
                                        new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.isEDG, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-sm-6">
                            <label><b>Program Group:</b></label>
                            @Html.DropDownListFor(model => model.isPG,
                                        (
                                            new[] { new SelectListItem { Text = "Y", Value = "Y" },
                                            new SelectListItem { Text = "N", Value = "N" }
                                        }),
                                        new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.isPG, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-sm-6">
                            <label><b>Notes:</b></label>
                            @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @rows = 5 })
                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger btn-sm cancelButton" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-sm createbutton" style="background-color:#444D8E;color:white;">Create</button>
            </div>
        }
    </div>
</div>