@model Icarus.Models.tblAssertion

@{
    ViewBag.Title = "Admission Browse";
}


<style>
    .tableheadleft {
        border-top-left-radius: 15px !important;
    }

    .tableheadright {
        border-top-right-radius: 15px !important;
    }

    .table-holder {
        width:100%;
        overflow-x:scroll;
        height:65vh;
    }

    .table-holder::-webkit-scrollbar {
        width: 12px; /* width of the entire scrollbar */
        background-color: #dddddd;
        height: 10px;
    }

    .table-holder::-webkit-scrollbar-track {
        background: #dddddd !important; /* color of the tracking area */
    }

    .table-holder::-webkit-scrollbar-thumb {
        background: #808080 !important; /* color of the scroll thumb */
        border-radius: 20px; /* roundness of the scroll thumb */
        border: 3px solid grey !important; /* creates padding around scroll thumb */
    }

    #head {
        position: sticky;
        top: 0; /* Don't forget this, required for the stickiness */
        background-color: #6C7AE0;
    }

    #td, #head {
        min-width: 200px;
        height: 25px;
        overflow: hidden;
        text-overflow: ellipsis;
        /*max-width: 100px;*/
    }

    .required {
        color: red;
    }

    /*html, body {
        margin: 0;
        height: 100%;
        overflow: hidden
    }*/
</style>
<script>
    function DeleteAssertion(id) {
        $("#assertionID").val(id);
        $('#deleteAssertionModal').modal().show();
    }

    function Edit(id) {
        var url = $("#editModal").data("url");
        $.get(url + "/" + id, function (data) {
            $("#editModal").html(data);
            $("#editModal").modal().show();
        });
    }


    $(document).ready(function () {
        $("#mySearch").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#thisTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        $(".markupPercent").on("keyup", function () {
            var price = $(".price").val();
            var qty = $(".qty").val();
            var totalPrice = price * qty;
            var markUpPercent = $(this).val();
            if (markUpPercent != 0) {
                var markUpValue = ((totalPrice * markUpPercent) / 100);
                var subTotal = totalPrice + markUpValue;
                $(".markUpValue").val(markUpValue);
                $(".subTotal").val(subTotal);
            }
            else {
                $(".markUpValue").val(0);
                $(".subTotal").val(totalPrice);
            }

        })
        $(".price").on("keyup", function () {
            var price = $(this).val();
            var qty = $(".qty").val();
            var totalPrice = price * qty;
            var markUpPercent = $(".markupPercent").val();
            if (markUpPercent != 0) {
                var markUpValue = ((totalPrice * markUpPercent) / 100);
                var subTotal = totalPrice + markUpValue;
                $(".markUpValue").val(markUpValue);
                $(".subTotal").val(subTotal);
            }
            else {
                $(".markUpValue").val(0);
                $(".subTotal").val(totalPrice);
            }
        });
        $(".qty").on("keyup", function () {
            var price = $(".price").val();
            var qty = $(this).val();
            var totalPrice = price * qty;
            var markUpPercent = $(".markupPercent").val();
            if (markUpPercent != 0) {
                var markUpValue = ((totalPrice * markUpPercent) / 100);
                var subTotal = totalPrice + markUpValue;
                $(".markUpValue").val(markUpValue);
                $(".subTotal").val(subTotal);
            }
            else {
                $(".markUpValue").val(0);
                $(".subTotal").val(totalPrice);
            }
        });
    });
</script>

<div class="col-sm-12 pl-3 pr-3">
    <div class="d-flex mb-2 mt-2 justify-content-between">
        @if (ViewBag.assertionLists == false)
        {
            <p>No Data to search.</p>
        }
        else
        {
            <input class="form-control col-sm-4" id="mySearch" type="search" placeholder="Search" aria-label="Search">
        }
        @if (Session["isADG"].ToString() == "Y" || Session["isEDG"].ToString() == "Y" || Session["isAAG"].ToString() == "Y")
        {
            <div>
                <button class="btn" style="background-color:#4E58A2;color:white;" data-toggle="modal" data-target="#assertionModal">
                    <i class="fa fa-plus-circle" aria-hidden="true"></i>
                    <span>&nbsp;Add Assertion</span>
                </button>
            </div>
        }
    </div>
    <hr>
    @if (ViewBag.assertionLists == false)
    {
        <div>No assertion records yet.</div>
        }
        else
        {
        <div id = "tableForm" class="table-holder">
            <table id = "example" class="table table-striped table-hover table-borderless">
                <thead style="background-color: #6C7AE0; color: white;">
                    <tr>
                        <th id="head" class="tableheadleft" scope="col">
                            ID CTC
                        </th>
                        <th id="head" scope="col">
                            Assertion Date
                        </th>
                        <th id="head" scope="col">
                            Posted Date
                        </th>
                        <th id="head" scope="col">
                            Description
                        </th>
                        <th id="head" scope="col">
                            Category
                        </th>
                        <th id="head" scope="col">
                            Quantity
                        </th>
                        <th id="head" scope="col">
                            Price
                        </th>
                        <th id="head" scope="col">
                            Markup %
                        </th>
                        <th id="head" scope="col">
                            Markup Value
                        </th>
                        <th id="head" scope="col">
                            Markup Price
                        </th>
                        <th id="head" scope="col">
                            Subtotal
                        </th>
                        @if (Session["isADG"].ToString() == "Y")
                        {
                            <th id="head" scope="col">
                                Notes
                            </th>
                            <th id="head" scope="col" class="tableheadright">
                                Action
                            </th>
                        }
                        else
                        {
                            <th id="head" scope="col" class="tableheadright">
                                Notes
                            </th>
                        }

                    </tr>
                </thead>
                <tbody id="thisTable">
                    @foreach (var item in ViewBag.AssertionsLists)
                    {
                        var postedDate = item.PostedDate == null ? "" : ((DateTime)item.PostedDate).ToShortDateString();
                        var assertionDate = item.AssertionDate == null ? "" : ((DateTime)item.AssertionDate).ToShortDateString();


                        <tr>
                            <td id="td">@item.IDChargeToCodep</td>
                            <td id="td">@assertionDate</td>
                            <td id="td">@postedDate</td>
                            <td id="td">@item.Description</td>
                            <td id="td">
                                @foreach (var category in ViewBag.AssertionCategories)
                                {
                                    if (item.IDAssertionCategory == category.IDAssertionCategory)
                                    {
                                        @category.Category
                                    }
                                }
                            </td>
                            <td id="td">@item.Qty.ToString("0")</td>
                            <td id="td">@item.Price.ToString("0.00")</td>
                            <td id="td">@item.Markup.ToString("0.00")</td>
                            <td id="td">@item.MarkupValue.ToString("0.00")</td>
                            <td id="td">@item.SubTotal.ToString("0.00")</td>
                            <td id="td">@item.SubTotal.ToString("0.00")</td>
                            @if (Session["isADG"].ToString() == "Y" || Session["isEDG"].ToString() == "Y" || Session["isAAG"].ToString() == "Y")
                            {
                                <td id="td">@item.Notes</td>
                                <td id="td">
                                    <button class="btn btn-sm btn-warning" onclick="Edit(@item.IDAssertion)">Edit</button>
                                    @if (Session["isADG"].ToString() == "Y") {
                                        <button class="btn btn-danger btn-sm text-center" type="button" onclick="DeleteAssertion(@item.IDAssertion)">Delete</button>
                                    }
                                </td>
                            }
                            else
                            {
                                <td id="td">@item.Notes</td>

                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    <div class="modal fade" id="assertionModal" tabindex="-1" role="dialog" aria-labelledby="gridSystemModalLabel">
        <div class="modal-dialog modal-md" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="gridSystemModalLabel">Add Assertion</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                @using (Html.BeginForm("CreateAssertion", "Admissions", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.IDAdmission)
                    <form>
                        <div class="modal-body">

                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label><b>Assertion Category</b></label>
                                    @Html.DropDownListFor(model => model.IDAssertionCategory, ViewBag.assertions as SelectList, new { @class = "form-control", required = true })
                                </div>
                                <div class="form-group col-md-6">
                                    <label>Description <span class="required">*</span></label>
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", required = true } })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label>Assertion Date <span class="required">*</span></label>
                                    @Html.TextBoxFor(model => model.AssertionDate, new { @type = "date", @class = "form-control datetimepicker", required = true })
                                </div>
                                <div class="form-group col-md-6">
                                    <label>Posted Date <span class="required">*</span></label>
                                    @Html.TextBoxFor(model => model.PostedDate, new { @type = "date", @class = "form-control datetimepicker", required = true })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label>Quantity <span class="required">*</span></label>
                                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @type = "number", @Value = "0", required = true, @class = "form-control qty", onkeydown = "if(event.key==='.'){event.preventDefault();}", onpaste = "let pasteData = event.clipboardData.getData('text'); if(pasteData){pasteData.replace(/[^0-9]*/g,'');} " } })
                                </div>
                                <div class="form-group col-md-6">
                                    <label>Price <span class="required">*</span></label>
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @type = "number", @Value = "0", @class = "form-control price", required = true } })
                                </div>
                                
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label>Markup % <span class="required">*</span></label>
                                    @Html.EditorFor(model => model.Markup, new { htmlAttributes = new { @type = "number", @class = "form-control markupPercent", Value = 20, required = true } })
                                </div>
                                <div class="form-group col-md-6">
                                    <label><b>Markup Value</b></label>
                                    @Html.EditorFor(model => model.MarkupValue, new { htmlAttributes = new { @type = "number", @class = "form-control markUpValue", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.SubTotal)
                                    @Html.EditorFor(model => model.SubTotal, new { htmlAttributes = new { @type = "number", @class = "form-control subTotal", @readonly = "readonly" } })
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.Notes)
                                    @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @rows = 5 })
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Add</button>
                        </div>
                    </form>
                }

            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- Modal -->
    <div class="modal fade" id="deleteAssertionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Confirmation</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this Assertion?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    @using (Html.BeginForm("DeleteAssertion", "Admissions", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <input type="number" class="id" id="assertionID" style="display:none;" name="id" value="" />
                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-url="@Url.Action("EditAssertionPartial","Admissions")">
    </div>
</div>

